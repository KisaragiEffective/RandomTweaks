buildscript {
	repositories {
		jcenter()

		maven {
			url "http://files.minecraftforge.net/maven"
		}
	}

	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
		classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
	}
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = "1.12.2-2.8.3.0"
group = "com.therandomlabs.randomtweaks"
archivesBaseName = "randomtweaks"

sourceCompatibility = targetCompatibility = "1.8"

repositories {
	maven {
		url "https://jitpack.io"
	}

	maven {
		url "https://www.cursemaven.com"
	}
}

dependencies {
	shadow "com.github.TheRandomLabs:RandomLib:1.12-SNAPSHOT"
	compile "com.github.TheRandomLabs:RandomLib:1.12-SNAPSHOT"
	deobfCompile "curse.maven:randompatches-285612:3133651"
	deobfCompile "curse.maven:randomportals-308137:3136488"
	deobfCompile "curse.maven:applecore-224472:2969118"
	deobfCompile "curse.maven:llibrary-243298:3116493"
	deobfCompile "curse.maven:wings-302584:2829351"
}

shadowJar {
	classifier = ""
	relocate "com.therandomlabs.randomlib", "com.therandomlabs.randomtweaks.repackage.com.therandomlabs.randomlib"
	configurations = [project.configurations.shadow]
}

reobf {
	shadowJar {
		mappingType = "SEARGE"
	}
}

build.dependsOn shadowJar

artifacts {
	archives shadowJar
}

minecraft {
	version = "1.12.2-14.23.5.2838"
	runDir = "run"
	mappings = "stable_39"

	replace "@VERSION@", project.version
	replace "@FINGERPRINT@", project.findProperty("signSHA1")
}

processResources {
	//Ensure this task is redone when the versions change
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	//Replace version and mcversion in mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": project.minecraft.version
	}
}

jar {
	manifest {
		attributes "FMLAT": "randomtweaks_at.cfg"
	}
}

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		project.hasProperty("keyStore")
	}

	keyStore = project.findProperty("keyStore")
	alias = project.findProperty("keyStoreAlias")
	storePass = project.findProperty("keyStorePass")
	keyPass = project.findProperty("keyStoreKeyPass")
	inputFile = jar.archivePath
	outputFile = jar.archivePath
}

build.dependsOn signJar
